import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { App, IonicPage, NavController, ViewController, NavParams, LoadingController } from 'ionic-angular';
import { ShareProvider } from '../../providers/share/share';
import { SuccessPage } from '../../pages/success/success';
import { Storage } from '@ionic/storage';
import { ToastController } from 'ionic-angular';

@IonicPage()
@Component({
  selector: 'page-invoice',
  templateUrl: 'invoice.html',
})
export class InvoicePage {
	public idParam;
	header = [];
	headerItems = [];

  	constructor(public navCtrl: NavController, public navParams: NavParams,
        private shareProvider: ShareProvider,
        private httpClient: HttpClient,
        private app: App,
        private storage: Storage,
        public loadingCtrl: LoadingController) {

        	this.idParam = navParams.get("id");

            let loader = this.loadingCtrl.create();
            loader.present();
            this.initializeItemsInvoice();    
            loader.dismiss();    
    }


  	ionViewDidLoad() {
    	this.initializeItemsInvoice(); 
  	}

  	initializeItemsInvoice() {

    	var filtered = [];
    	
        this.storage.get('user_api').then(userApi => {
            let filter = [];
            filter.push({
                field: 'id',
                operator: 'eq',
                value: this.idParam,
                mode: 'and'
            });

            var param = {
                api_token: userApi.apiToken,
                filter: JSON.stringify(filter)
            };

            this.httpClient.post('http://'+userApi.apiUrl+'/api/v1/sales', param).subscribe(data => {
                this.header = data['sales'];				
            });

            filter = [];
            filter.push({
                field: 'sale_id',
                operator: 'eq',
                value: this.idParam,
                mode: 'and'
            });

            var param_items = {
                api_token: userApi.apiToken,
                select: 'id,product_id,product__name,quantity,price,price_subtotal',
                filter: JSON.stringify(filter)
            };

            this.httpClient.post('http://'+userApi.apiUrl+'/api/v1/sale_items', param_items).subscribe(data_items => {
            	console.log(data_items);
                this.headerItems = data_items['saleItems'];
            });

        });
    }

    SendReceipt() {
    	this.navCtrl.setRoot(SuccessPage);
    }

}
